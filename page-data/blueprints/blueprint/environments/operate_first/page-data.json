{"componentChunkName":"component---src-templates-doc-js","path":"/blueprints/blueprint/environments/operate_first/","result":{"data":{"site":{"siteMetadata":{"title":"Operate First"}},"mdx":{"id":"06cb3fb3-ed04-54cf-baf2-731e88557b15","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Operate First Environment\"), mdx(\"p\", null, mdx(\"img\", _extends({\n    parentName: \"p\"\n  }, {\n    \"src\": \"operate_first_environment.png\",\n    \"alt\": \"drawing\"\n  }))), mdx(\"h2\", null, \"Storage\"), mdx(\"p\", null, \"Some network-attached storage. E.g. a Ceph cluster. For experimental purposes, the storage serving layer can change (ceph -> rook, gluster, nfs)\"), mdx(\"p\", null, \"We do not run a registry, but assume that quay.io is used for all released container images. Each OpenShift cluster will have its own persistent internal registry.\"), mdx(\"h2\", null, \"Orchestration / Management Cluster\"), mdx(\"h4\", null, \"Use case\"), mdx(\"p\", null, \"Run supporting tools to deploy, monitor and orchestrate the various environments. E.g. ArgoCD, external Monitoring, Ticket Management, etc.\"), mdx(\"h4\", null, \"Hardware\"), mdx(\"p\", null, \"14 VCPU, 64GB RAM, 1 TB storage\"), mdx(\"h2\", null, \"Dev\"), mdx(\"h4\", null, \"Use case\"), mdx(\"p\", null, \"Spin up experimental minimal OCP clusters to develop in an interactive environment. \"), mdx(\"h4\", null, \"Hardware\"), mdx(\"p\", null, \"[4 VCPU, 32GB RAM,  50 GB storage]\", \" / Dev Cluster\"), mdx(\"p\", null, \"OSP Platform to provide this HW as virtual resources\"), mdx(\"h2\", null, \"Test & Build (CI/CD/CD)\"), mdx(\"h4\", null, \"Use case\"), mdx(\"p\", null, \"Run automated unit and integration tests. Build various assets, general tekton pipelines\"), mdx(\"h4\", null, \"Hardware\"), mdx(\"p\", null, \"64 VCPU,  512 GB RAM,  1.5 TB storage\"), mdx(\"h2\", null, \"Stage N\"), mdx(\"h4\", null, \"Use case\"), mdx(\"p\", null, \"Minimal replica of production environment with running test workloads. N implementations, depending on different platform configurations and different workloads. \"), mdx(\"h4\", null, \"Hardware\"), mdx(\"p\", null, \"[16 VCPU, 128GB RAM,  500 GB storage]\", \" / Stage Cluster\"), mdx(\"h2\", null, \"Production\"), mdx(\"h4\", null, \"Use case\"), mdx(\"p\", null, \"Long-running stable environment to support end-user workloads.\"), mdx(\"h4\", null, \"Hardware\"), mdx(\"p\", null, \"128 VCPU,  2 TB RAM,  400 TB storage\"));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"","description":null}}},"pageContext":{"id":"06cb3fb3-ed04-54cf-baf2-731e88557b15","slug":"environments/operate_first"}},"staticQueryHashes":["117426894","3000541721","3753692419"]}